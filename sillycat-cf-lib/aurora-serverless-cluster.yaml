AWSTemplateFormatVersion: '2010-09-09'

Description: This stack deploys an Aurora Serverless PostgreSQL cluster.

Parameters:
  EnvironmentName:
    Description: Environment name for the application (dev/staging/uat/production)
    Type: String
    Default: dev
  DBMasterName:
    Type: String
    Default: vectormaster
  DatabaseName:
    Type: String
    Default: vector1
  MaxCapacity:
    Description: 'The maximum capacity units for the cluster.'
    Type: String
    AllowedValues: [2, 4, 8, 16, 32, 64, 192, 384]
    Default: 4
  MinCapacity:
    Description: 'The minimum capacity units for the cluster.'
    Type: String
    AllowedValues: [2, 4, 8, 16, 32, 64, 192, 384]
    Default: 2
  EngineVersion:
    Description: 'Aurora Serverless PostgreSQL version.'
    Type: String
    Default: '15.3'
    AllowedValues: ['12.15', '13.11', '14.8', '15.3']

Resources:
  DBMasterPassword:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub '/rds/${EnvironmentName}/${DatabaseName}-Password'
      GenerateSecretString:
        PasswordLength: 16
        ExcludePunctuation: true

  DBSecret:
    Type: 'AWS::SecretsManager::Secret'
    DependsOn: DBMasterPassword  # Ensures the DBMasterPassword is created first
    Properties:
      Name: !Sub '/rds/${EnvironmentName}/${DatabaseName}-Credentials'
      Description: 'Aurora database credentials with both username and password'
      SecretString:
        Fn::Sub:
          - '{"username": "${DBMasterName}", "password": "${DBMasterPassword}"}'
          - DBMasterName: !Ref DBMasterName
            DBMasterPassword: !Ref DBMasterPassword

  AuroraPostgreSQLServerlessV2Cluster:
    Type: AWS::RDS::DBCluster
    DependsOn: DBSecret  # Ensures the secret is created first
    Properties:
      Engine: aurora-postgresql
      EngineVersion: !Ref EngineVersion
      DatabaseName: !Ref DatabaseName
      MasterUsername: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:password}}'
      EnableHttpEndpoint: True
      ServerlessV2ScalingConfiguration:
        MinCapacity: !Ref MinCapacity
        MaxCapacity: !Ref MaxCapacity

  AuroraPostgreSQLServerlessV2Instance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref AuroraPostgreSQLServerlessV2Cluster
      DBInstanceClass: db.serverless
      Engine: aurora-postgresql

Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  ClusterName:
    Description: 'The name of the cluster.'
    Value: !Ref AuroraPostgreSQLServerlessV2Cluster
  DNSName:
    Description: 'The connection endpoint for the DB cluster.'
    Value: !GetAtt 'AuroraPostgreSQLServerlessV2Cluster.Endpoint.Address'
  DBName:
    Description: 'The name of the database.'
    Value: !Ref DatabaseName
  DBPort:
    Description: 'The port of the database.'
    Value: 5432